name: Build Linux Binaries

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag that starts with 'v'

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'

    - name: Build Linux binary
      env:
        GOOS: linux
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        go build -v -a -ldflags '-extldflags "-static"' -o tarbit-linux-${{ matrix.arch }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./tarbit-linux-${{ matrix.arch }}
        asset_name: tarbit-linux-${{ matrix.arch }}
        asset_content_type: application/octet-stream
